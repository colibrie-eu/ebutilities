// Code generated by https://github.com/gocomply/xsd2go; DO NOT EDIT.
// Models for http://www.ebutilities.at/schemata/customerconsent/cmnotification/01p11
package cp

import (
	"encoding/xml"
	"github.com/WattWiseAt/ebutilities/models/customerconsent/cmnotification/ct"
)

// Element
type Cmnotification struct {
	XMLName xml.Name `xml:"CMNotification"`

	MarketParticipantDirectory MarketParticipantDirectory `xml:"MarketParticipantDirectory"`

	ProcessDirectory ProcessDirectory `xml:"ProcessDirectory"`
}

// XSD ComplexType declarations

type MarketParticipantDirectory struct {
	XMLName xml.Name

	SchemaVersion string `xml:"SchemaVersion,attr"`

	DocumentMode ct.DocumentMode `xml:"DocumentMode,attr"`

	Duplicate bool `xml:"Duplicate,attr"`

	MessageCode ct.MessageCode `xml:"MessageCode"`

	RoutingHeader ct.RoutingHeader `xml:"RoutingHeader"`

	Sector ct.Sector `xml:"Sector"`
}

type ProcessDirectory struct {
	XMLName xml.Name

	CmrequestId ct.GroupingId `xml:"CMRequestId"`

	ResponseData []ResponseDataType `xml:"ResponseData"`

	MessageId ct.GroupingId `xml:"MessageId"`

	ConversationId ct.GroupingId `xml:"ConversationId"`
}

type ResponseDataType struct {
	XMLName xml.Name

	ConsentId *ct.GroupingId `xml:"ConsentId"`

	MeteringPoint *ct.MeteringPoint `xml:"MeteringPoint"`

	ResponseCode []ResponseCode `xml:"ResponseCode"`

	ParamHist []ParamHistType `xml:"ParamHist"`
}

type ParamHistType struct {
	XMLName xml.Name

	DateFrom string `xml:"DateFrom"`

	DateTo string `xml:"DateTo"`

	MeteringIntervall MeteringIntervallType `xml:"MeteringIntervall"`
}

// XSD SimpleType declarations

type MeteringIntervallType string

const MeteringIntervallTypeQh MeteringIntervallType = "QH"

const MeteringIntervallTypeH MeteringIntervallType = "H"

const MeteringIntervallTypeD MeteringIntervallType = "D"

const MeteringIntervallTypeV MeteringIntervallType = "V"

type ResponseCode int64
