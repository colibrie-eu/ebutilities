// Code generated by https://github.com/gocomply/xsd2go; DO NOT EDIT.
// Models for http://www.ebutilities.at/schemata/customerconsent/cmrequest/01p20
package cp

import (
	"encoding/xml"
	"github.com/WattWiseAt/ebutilities/models/customerconsent/cmrequest/ct"
)

// Element
type Cmrequest struct {
	XMLName xml.Name `xml:"CMRequest"`

	MarketParticipantDirectory MarketParticipantDirectory `xml:"MarketParticipantDirectory"`

	ProcessDirectory ProcessDirectory `xml:"ProcessDirectory"`
}

// XSD ComplexType declarations

type MarketParticipantDirectory struct {
	XMLName xml.Name

	SchemaVersion string `xml:"SchemaVersion,attr"`

	DocumentMode ct.DocumentMode `xml:"DocumentMode,attr"`

	Duplicate bool `xml:"Duplicate,attr"`

	MessageCode ct.MessageCode `xml:"MessageCode"`

	RoutingHeader ct.RoutingHeader `xml:"RoutingHeader"`

	Sector ct.Sector `xml:"Sector"`
}

type ProcessDirectory struct {
	XMLName xml.Name

	ProcessDate string `xml:"ProcessDate"`

	MeteringPoint *ct.MeteringPoint `xml:"MeteringPoint"`

	CmrequestId ct.GroupingId `xml:"CMRequestId"`

	ConsentId *ct.GroupingId `xml:"ConsentId"`

	Cmrequest ReqType `xml:"CMRequest"`

	MessageId ct.GroupingId `xml:"MessageId"`

	ConversationId ct.GroupingId `xml:"ConversationId"`
}

type ReqType struct {
	XMLName xml.Name

	ReqDatType ReqDatType `xml:"ReqDatType"`

	DateFrom string `xml:"DateFrom"`

	DateTo string `xml:"DateTo"`

	MeteringIntervall *MeteringIntervallType `xml:"MeteringIntervall"`

	TransmissionCycle *TransmissionCycle `xml:"TransmissionCycle"`

	Ecid *ct.MeteringPoint `xml:"ECID"`

	EcpartFact *EcpartFact `xml:"ECPartFact"`

	Ecshare *Ecshare `xml:"ECShare"`

	EnergyDirection *EnergyDirection `xml:"EnergyDirection"`
}

type ReqDatParamType struct {
	XMLName xml.Name

	ParamCyc *ParamCycType `xml:"ParamCyc"`

	ParamHist *ParamHistType `xml:"ParamHist"`
}

type ParamHistType struct {
	XMLName xml.Name

	MeteringIntervall MeteringIntervallType `xml:",any"`
}

type ParamCycType struct {
	XMLName xml.Name

	MeteringIntervall MeteringIntervallType `xml:"MeteringIntervall"`

	TransmissionCycle TransmissionCycle `xml:"TransmissionCycle"`
}

// XSD SimpleType declarations

type EcpartFact float64

type Ecshare float64

type EnergyDirection string

const EnergyDirectionConsumption EnergyDirection = "CONSUMPTION"

const EnergyDirectionGeneration EnergyDirection = "GENERATION"

type MeteringIntervallType string

const MeteringIntervallTypeQh MeteringIntervallType = "QH"

const MeteringIntervallTypeH MeteringIntervallType = "H"

const MeteringIntervallTypeD MeteringIntervallType = "D"

const MeteringIntervallTypeV MeteringIntervallType = "V"

type ReqDatType string

type TransmissionCycle string

const TransmissionCycleD TransmissionCycle = "D"

const TransmissionCycleM TransmissionCycle = "M"

const TransmissionCycleV TransmissionCycle = "V"
